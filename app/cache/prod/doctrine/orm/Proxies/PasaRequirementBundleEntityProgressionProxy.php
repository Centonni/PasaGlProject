<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class PasaRequirementBundleEntityProgressionProxy extends \Pasa\RequirementBundle\Entity\Progression implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setPercentage($percentage)
    {
        $this->__load();
        return parent::setPercentage($percentage);
    }

    public function getPercentage()
    {
        $this->__load();
        return parent::getPercentage();
    }

    public function setProgressionDate($progressionDate)
    {
        $this->__load();
        return parent::setProgressionDate($progressionDate);
    }

    public function getProgressionDate()
    {
        $this->__load();
        return parent::getProgressionDate();
    }

    public function setExigency(\Pasa\RequirementBundle\Entity\Exigency $exigency)
    {
        $this->__load();
        return parent::setExigency($exigency);
    }

    public function getExigency()
    {
        $this->__load();
        return parent::getExigency();
    }

    public function setCollaborator(\Pasa\RequirementBundle\Entity\Collaborator $collaborator)
    {
        $this->__load();
        return parent::setCollaborator($collaborator);
    }

    public function getCollaborator()
    {
        $this->__load();
        return parent::getCollaborator();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'exigency', 'collaborator', 'id', 'percentage', 'progression_date');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}